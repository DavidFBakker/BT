@using EMDB
@*<script src="lib/kendo-ui/js/jquery.min.js"></script>
<script src="lib/kendo-ui/js/kendo.all.min.js"></script>*@
@*@model IEnumerable<EMDB.Packet>*@

@{
    ViewBag.Title = "Graphs";
    Layout = "_Layout";
}

<h2>@ViewData["Title"].</h2>

@(Html.Kendo().DropDownList()
      .Name("ValidInputsList")
      .HtmlAttributes(new {title = "Input"})
      .DataSource(source => source
          .Custom()
          .Transport(transport => transport
              .Read(read => read.Action("ValidInputs", "Packets"))
          ))
      .Events(events => events.Change("onChange"))
      .SelectedIndex(0)
      )

@(Html.Kendo().Chart<Plot>()
      .Name("powerChart")
      .Title("Power")
      .Series(series => { series.Area(model => model.Value); })
      .CategoryAxis(axis => axis
          .Categories(model => model.DT)
      )
      .DataSource(ds => ds
          .Read(read => read.Action("GraphData", "Packets").Data("getListSelection"))
      )
      )

<script>

    function onChange(e) {
        //$("#powerChart").data("kendoChart").options.data.read
        var selection = getListSelection();
        alert("Selection: " + selection.selection);
        //  $("#powerChart").data("kendoChart").dataSource.read({"selection": selection} );
        $("#powerChart").data("kendoChart").dataSource.read(selection);
        $("#powerChart").data("kendoChart").refresh();
        //  chart.dataSource.read();
        //chart.refresh();
    }

    function getListSelection(e) {

        //var dbConnObj  = $("#ValidInputsList").data("kendoListBox");
        //var index = dbConnObj.select().index(), selected =  dbConnObj.dataSource.view()[index];

        ////return selected;
        //return { "selection": selected };

        return {
            selection: $("#ValidInputsList").data("kendoDropDownList").text()
        };
    }
</script>

@*<script type="text/x-kendo-tmpl" id="template">
    <li class="col-xs-6 col-md-4 col-lg-2">
        <figure>
            <figcaption class="hidden-xs">
                <h4>#: Node #</h4>
                <p class="hidden-sm">
                    #: E1 #
                </p>
            </figcaption>
        </figure>
    </li>
</script>

@(Html.Kendo().ListView(Model) //The ListView will be initially bound to the Model which is the Products table.
      .Name("productListView") //The name of the ListView is mandatory. It specifies the "id" attribute of the widget.
      .TagName("div") //The tag name of the ListView is mandatory. It specifies the element which wraps all ListView items.
      .ClientTemplateId("template") //This template will be used for rendering the ListView items.
      .DataSource(datasource => datasource
        .Ajax()
        .Read(read => read.Action("ListRead","Packets"))
        )
      .Pageable() //Enable paging.
      )*@


@*@foreach (var item in Model)
{
    @(Html.Kendo().Chart(Model)
          .Name("internetUsersChart") //The name of the Chart is mandatory. It specifies the "id" attribute of the widget.
          .Title("Internet Users")
          .Series(series => {
                                series.Bar(model => model.V) //Create a Bar Chart series bound to the "Value" property.
                                    .Name("United States");
          })
          .CategoryAxis(axis => axis
              .Categories(model => model.DT)
          )
          )
}*@